{"ast":null,"code":"var _jsxFileName = \"/Volumes/Samsung_T5/repositorios/temp/Startup-ReactJS-WebDev-Test/github-guru/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport logo from '../../assets/logo.png';\nimport { Container, Form, Logo, Results } from './styles';\nimport List from '../../components/List';\nimport * as RepoActions from '../../store/actions/repo';\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repositoryInput: ''\n    };\n\n    this.handleAddRepository = e => {\n      e.preventDefault();\n      const _this$props = this.props,\n            addRepoRequest = _this$props.addRepoRequest,\n            repo = _this$props.repo;\n      addRepoRequest(this.state.repositoryInput);\n    };\n  }\n\n  render() {\n    const repositoryInput = this.state.repositoryInput;\n    const repo = this.props.repo;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      src: logo,\n      alt: \"Github Guru\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, repo.data.id), React.createElement(Form, {\n      onSubmit: this.handleAddRepository,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type your Git username...\",\n      value: this.state.repositoryInput,\n      onChange: e => this.setState({\n        repositoryInput: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Check\"))), React.createElement(List, {\n      repositoryInput: repositoryInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(RepoActions, dispatch);\n\nconst mapStateToProps = state => ({\n  repo: state.repo\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["/Volumes/Samsung_T5/repositorios/temp/Startup-ReactJS-WebDev-Test/github-guru/src/pages/Main/index.js"],"names":["React","Component","connect","bindActionCreators","logo","Container","Form","Logo","Results","List","RepoActions","Main","state","repositoryInput","handleAddRepository","e","preventDefault","props","addRepoRequest","repo","render","data","id","setState","target","value","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SACEC,SADF,EACaC,IADb,EACmBC,IADnB,EACyBC,OADzB,QAEO,UAFP;AAGA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;;AAEA,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BW,KAD2B,GACnB;AACNC,MAAAA,eAAe,EAAE;AADX,KADmB;;AAAA,SAK3BC,mBAL2B,GAKJC,CAAD,IAAO;AAC3BA,MAAAA,CAAC,CAACC,cAAF;AAD2B,0BAEM,KAAKC,KAFX;AAAA,YAEnBC,cAFmB,eAEnBA,cAFmB;AAAA,YAEHC,IAFG,eAEHA,IAFG;AAI3BD,MAAAA,cAAc,CAAC,KAAKN,KAAL,CAAWC,eAAZ,CAAd;AACD,KAV0B;AAAA;;AAY3BO,EAAAA,MAAM,GAAG;AAAA,UACCP,eADD,GACqB,KAAKD,KAD1B,CACCC,eADD;AAAA,UAECM,IAFD,GAEU,KAAKF,KAFf,CAECE,IAFD;AAGP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEf,IAAX;AAAiB,MAAA,GAAG,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKe,IAAI,CAACE,IAAL,CAAUC,EAAf,CADF,EAEE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKR,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,2BAFd;AAGE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,eAHpB;AAIE,MAAA,QAAQ,EAAEE,CAAC,IAAI,KAAKQ,QAAL,CAAc;AAAEV,QAAAA,eAAe,EAAEE,CAAC,CAACS,MAAF,CAASC;AAA5B,OAAd,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CAFF,CAFF,EAcE,oBAAC,IAAD;AAAM,MAAA,eAAe,EAAEZ,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF;AAkBD;;AAjC0B;;AAoC7B,MAAMa,kBAAkB,GAAGC,QAAQ,IAAIxB,kBAAkB,CAACO,WAAD,EAAciB,QAAd,CAAzD;;AAEA,MAAMC,eAAe,GAAGhB,KAAK,KAAK;AAChCO,EAAAA,IAAI,EAAEP,KAAK,CAACO;AADoB,CAAL,CAA7B;;AAIA,eAAejB,OAAO,CACpB0B,eADoB,EAEpBF,kBAFoB,CAAP,CAGbf,IAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport logo from '../../assets/logo.png';\nimport {\n  Container, Form, Logo, Results,\n} from './styles';\nimport List from '../../components/List';\n\nimport * as RepoActions from '../../store/actions/repo';\n\nclass Main extends Component {\n  state = {\n    repositoryInput: '',\n  };\n\n  handleAddRepository = (e) => {\n    e.preventDefault();\n    const { addRepoRequest, repo } = this.props;\n\n    addRepoRequest(this.state.repositoryInput);\n  };\n\n  render() {\n    const { repositoryInput } = this.state;\n    const { repo } = this.props;\n    return (\n      <Container>\n        <Logo src={logo} alt=\"Github Guru\" />\n        <div>\n          <h1>{repo.data.id}</h1>\n          <Form onSubmit={this.handleAddRepository}>\n            <input\n              type=\"text\"\n              placeholder=\"Type your Git username...\"\n              value={this.state.repositoryInput}\n              onChange={e => this.setState({ repositoryInput: e.target.value })}\n            />\n            <button type=\"submit\">Check</button>\n          </Form>\n        </div>\n        <List repositoryInput={repositoryInput} />\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(RepoActions, dispatch);\n\nconst mapStateToProps = state => ({\n  repo: state.repo,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Main);\n"]},"metadata":{},"sourceType":"module"}