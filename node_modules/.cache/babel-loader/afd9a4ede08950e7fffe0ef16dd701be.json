{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\nconst middlewares = [];\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor\n});\nmiddlewares.push(sagaMiddleware);\nconst composer = process.env.NODE_ENV === 'development' ? compose(applyMiddleware(...middlewares), console.tron.createEnhancer()) : compose(applyMiddleware(...middlewares));\nconst store = createStore(reducers, composer);\nsagaMiddleware.run(sagas);\nexport default store;","map":{"version":3,"sources":["/Volumes/Samsung_T5/repositorios/temp/Startup-ReactJS-WebDev-Test/github-guru/src/store/index.js"],"names":["createStore","compose","applyMiddleware","createSagaMiddleware","reducers","sagas","middlewares","sagaMonitor","process","env","NODE_ENV","console","tron","createSagaMonitor","sagaMiddleware","push","composer","createEnhancer","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,WAAW,GAAG,EAApB;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,OAAO,CAACC,IAAR,CAAaC,iBAAb,EAAzC,GAA4E,IAAhG;AAEA,MAAMC,cAAc,GAAGX,oBAAoB,CAAC;AAAEI,EAAAA;AAAF,CAAD,CAA3C;AAEAD,WAAW,CAACS,IAAZ,CAAiBD,cAAjB;AAEA,MAAME,QAAQ,GAAGR,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACbT,OAAO,CACPC,eAAe,CAAC,GAAGI,WAAJ,CADR,EAEPK,OAAO,CAACC,IAAR,CAAaK,cAAb,EAFO,CADM,GAKbhB,OAAO,CAACC,eAAe,CAAC,GAAGI,WAAJ,CAAhB,CALX;AAOA,MAAMY,KAAK,GAAGlB,WAAW,CAACI,QAAD,EAAWY,QAAX,CAAzB;AAEAF,cAAc,CAACK,GAAf,CAAmBd,KAAnB;AAEA,eAAea,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst middlewares = [];\n\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\n\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n\nmiddlewares.push(sagaMiddleware);\n\nconst composer = process.env.NODE_ENV === 'development'\n  ? compose(\n    applyMiddleware(...middlewares),\n    console.tron.createEnhancer(),\n  )\n  : compose(applyMiddleware(...middlewares));\n\nconst store = createStore(reducers, composer);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}