{"ast":null,"code":"import _objectSpread from \"/Volumes/Samsung_T5/repositorios/temp/Startup-ReactJS-WebDev-Test/github-guru/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { LOAD_COMMITS_REQUEST, LOAD_COMMITS_SUCCESS } from '../actions/commits';\nconst INITIAL_STATE = {\n  data: [],\n  loading: false\n};\nexport default function commits(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case LOAD_COMMITS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case LOAD_COMMITS_SUCCESS:\n      return _objectSpread({}, state, {\n        data: action.payload.data,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}\nconsole.tron.log(commits);","map":{"version":3,"sources":["/Volumes/Samsung_T5/repositorios/temp/Startup-ReactJS-WebDev-Test/github-guru/src/store/reducers/commits.js"],"names":["LOAD_COMMITS_REQUEST","LOAD_COMMITS_SUCCESS","INITIAL_STATE","data","loading","commits","state","action","type","payload","console","tron","log"],"mappings":";AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,QAA2D,oBAA3D;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,OAAO,EAAE;AAFW,CAAtB;AAKA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGJ,aAAzB,EAAwCK,MAAxC,EAAgD;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,oBAAL;AACE,+BAAYM,KAAZ;AAAmBF,QAAAA,OAAO,EAAE;AAA5B;;AACF,SAAKH,oBAAL;AACE,+BAAYK,KAAZ;AAAmBH,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeN,IAAxC;AAA8CC,QAAAA,OAAO,EAAE;AAAvD;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD;AACDI,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBP,OAAjB","sourcesContent":["import { LOAD_COMMITS_REQUEST, LOAD_COMMITS_SUCCESS } from '../actions/commits';\n\nconst INITIAL_STATE = {\n  data: [],\n  loading: false,\n};\n\nexport default function commits(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case LOAD_COMMITS_REQUEST:\n      return { ...state, loading: true };\n    case LOAD_COMMITS_SUCCESS:\n      return { ...state, data: action.payload.data, loading: false };\n    default:\n      return state;\n  }\n}\nconsole.tron.log(commits);\n"]},"metadata":{},"sourceType":"module"}