{"version":3,"sources":["../github-guru/src/store/actions/repo.js","../github-guru/src/store/reducers/repo.js","../github-guru/src/store/actions/commits.js","../github-guru/src/store/reducers/commits.js","../github-guru/src/store/reducers/index.js","../github-guru/src/services/api.js","../github-guru/src/store/sagas/repo.js","../github-guru/src/services/history.js","../github-guru/src/store/sagas/commits.js","../github-guru/src/store/sagas/index.js","../github-guru/src/store/index.js","../github-guru/src/pages/Main/styles.js","../github-guru/src/components/List/styles.js","../github-guru/src/components/List/index.js","../github-guru/src/pages/Main/index.js","../github-guru/src/components/Commits/styles.js","../github-guru/src/components/Commits/index.js","../github-guru/src/routes.js","../github-guru/src/styles/global.js","../github-guru/src/App.js","../github-guru/src/index.js","../github-guru/src/assets/logo.png","../github-guru/src/assets/avatar.png"],"names":["LOAD_REQUEST","LOAD_SUCCESS","addRepoRequest","repository","type","payload","addRepoSuccess","data","INITIAL_STATE","loading","console","log","LOAD_COMMITS_REQUEST","LOAD_COMMITS_SUCCESS","loadCommitsRequest","full_name","loadCommitsSuccess","commits","state","arguments","length","undefined","action","Object","objectSpread","tron","combineReducers","repo","api","axios","create","baseURL","addRepo","_ref","regenerator_default","a","wrap","_context","prev","next","call","get","concat","sent","put","t0","stop","_marked","history","createBrowserHistory","listCommits","response","push","commits_marked","rootSaga","all","takeLatest","sagas_marked","middlewares","sagaMiddleware","createSagaMiddleware","sagaMonitor","composer","compose","applyMiddleware","apply","store","createStore","reducers","run","sagas","Container","styled","div","_templateObject","Logo","img","_templateObject2","Form","_templateObject3","form","_templateObject4","Repository","styles_templateObject","Loading","span","styles_templateObject2","Card","styles_templateObject3","Button","button","styles_templateObject4","Item","ul","_templateObject5","List","_templateObject6","toCommits","openCommits","rep","_this","props","_this2","this","react_default","createElement","react","map","key","id","data-testid","src","owner","avatar_url","alt","login","name","description","onClick","Component","connect","dispatch","bindActionCreators","CommitsActions","Main","repositoryInput","handleAddRepository","e","preventDefault","_this$props","logo","onSubmit","placeholder","value","onChange","setState","target","components_List","RepoActions","Commits_styles_templateObject","Title","Commits_styles_templateObject2","h1","Commits_styles_templateObject3","SearchInput","Commits_styles_templateObject4","input","styles_templateObject5","li","styles_templateObject6","_templateObject7","_templateObject8","CommitList","_templateObject9","_templateObject10","_templateObject11","Commits","items","search","filterList","event","updatedList","filter","c","commit","message","toLowerCase","componentDidMount","list","_this$state","styles_Container","styles_Logo","className","slice","item","styles_Card","sha","styles_Repository","author","defineProperty","avatar","moment","date","fromNow","Routes","react_router","exact","path","component","createGlobalStyle","global_templateObject","App","es","routes","global","ReactDOM","render","App_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a199ea54.chunk.js","sourcesContent":["// ActionTypes\nexport const LOAD_REQUEST = 'LOAD_REQUEST';\nexport const LOAD_SUCCESS = 'LOAD_SUCCESS';\n\n// Ação REQUEST lançada pelo component => ação ouvida pela Saga => chamada à API => Ação SUCCESS => Será ouvido pelo Reducer\n\n// Action creators\nexport const addRepoRequest = repository => ({\n  type: 'LOAD_REQUEST',\n  payload: { repository },\n});\n\nexport const addRepoSuccess = data => ({\n  type: 'LOAD_SUCCESS',\n  payload: { data },\n});\n","import { LOAD_REQUEST, LOAD_SUCCESS } from '../actions/repo';\n\nconst INITIAL_STATE = {\n  data: [],\n  loading: false,\n};\n\nexport default function repo(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case LOAD_REQUEST:\n      return { ...state, loading: true };\n    case LOAD_SUCCESS:\n      return { ...state, data: action.payload.data, loading: false };\n    default:\n      return state;\n  }\n}\nconsole.log('teste');\n","// ActionTypes\nexport const LOAD_COMMITS_REQUEST = 'LOAD_COMMITS_REQUEST';\nexport const LOAD_COMMITS_SUCCESS = 'LOAD_COMMITS_SUCCESS';\n\n// Ação REQUEST lançada pelo component => ação ouvida pela Saga => chamada à API => Ação SUCCESS => Será ouvido pelo Reducer\n\n// Action creators\nexport const loadCommitsRequest = full_name => ({\n  type: 'LOAD_COMMITS_REQUEST',\n  payload: { full_name },\n});\n\nexport const loadCommitsSuccess = data => ({\n  type: 'LOAD_COMMITS_SUCCESS',\n  payload: { data },\n});\n","import { LOAD_COMMITS_REQUEST, LOAD_COMMITS_SUCCESS } from '../actions/commits';\n\nconst INITIAL_STATE = {\n  data: [],\n  loading: false,\n};\n\nexport default function commits(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case LOAD_COMMITS_REQUEST:\n      return { ...state, loading: true };\n    case LOAD_COMMITS_SUCCESS:\n      return { ...state, data: action.payload.data, loading: false };\n    default:\n      return state;\n  }\n}\nconsole.tron.log(commits);\n","import { combineReducers } from 'redux';\n\nimport repo from './repo';\nimport commits from './commits';\n\nexport default combineReducers({\n  repo,\n  commits,\n});\n","import axios from 'axios';\n\nexport const api = axios.create({ baseURL: 'https://api.github.com' });\n\n// export const fetchUserList = userId => axios.create({ baseURL: `https://api.github.com });\n// export const fetchUser = userId => axios.create({ baseURL: `https://api.github.com/users/${userId}` });\n\nexport default api;\n","import { call, put } from 'redux-saga/effects';\nimport { api } from '../../services/api';\n\nimport { addRepoSuccess } from '../actions/repo';\n\n// A Action the acesso ao payload da ACTION\nexport function* addRepo(action) {\n  try {\n    // Primeiro parametro da call vem a api, no segundo parametro vem o restante da requisição.\n    const { data } = yield call(api.get, `/users/${action.payload.repository}/repos?per_page=100`);\n\n    yield put(addRepoSuccess(data));\n    // console.tron.log(repositoryData);\n  } catch (err) {\n    // yield put(loadFailure());\n    console.tron.log('error');\n  }\n}\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import { call, put } from 'redux-saga/effects';\nimport { api } from '../../services/api';\nimport history from '../../services/history';\n\nimport { loadCommitsSuccess } from '../actions/commits';\n\n// A Action tem acesso ao payload da ACTION\nexport function* listCommits(action) {\n  try {\n    // Primeiro parametro da call vem a api, no segundo parametro vem o restante da requisição.\n    const response = yield call(api.get, `/repos/${action.payload.full_name}/commits`);\n    yield put(loadCommitsSuccess(response.data));\n    history.push('/commits');\n    console.tron.log('sucesso');\n  } catch (err) {\n    // yield put(loadFailure());\n    console.tron.log('error');\n  }\n}\n","import { all, takeLatest } from 'redux-saga/effects';\nimport { LOAD_REQUEST } from '../actions/repo';\nimport { LOAD_COMMITS_REQUEST } from '../actions/commits';\n\nimport { addRepo } from './repo';\nimport { listCommits } from './commits';\n\nexport default function* rootSaga() {\n  yield all([takeLatest(LOAD_REQUEST, addRepo), takeLatest(LOAD_COMMITS_REQUEST, listCommits)]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst middlewares = [];\n\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\n\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n\nmiddlewares.push(sagaMiddleware);\n\nconst composer = process.env.NODE_ENV === 'development'\n  ? compose(\n    applyMiddleware(...middlewares),\n    console.tron.createEnhancer(),\n  )\n  : compose(applyMiddleware(...middlewares));\n\nconst store = createStore(reducers, composer);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 60px;\n  height: 100%;\n  min-height: 1020px;\n  background-color: #48285b;\n  flex: 1;\n`;\nexport const Logo = styled.img`\n  height: 250px;\n  margin-bottom: 1px;\n`;\nexport const Results = styled.div`\n  height: 100%;\n`;\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  width: 100%;\n  max-width: 550px;\n  /* display: flex; */\n\n  input {\n    flex: 1;\n    height: 55px;\n    padding: 0 20px;\n    background: #fff;\n    border: 0;\n    color: #48285b;\n    font-size: 18px;\n    border-radius: 3px;\n    min-width: 300px;\n  }\n  button {\n    height: 55px;\n    padding: 0 20px;\n    margin-left: 10px;\n    background: #ffe162;\n    color: #48285b;\n    border: 0;\n    font-size: 20px;\n    font-weight: bold;\n    border-radius: 3px;\n    flex: 1;\n    &:hover {\n      background: #fff111;\n    }\n  }\n`;\n","// import styled from 'styled-components';\n\n// export const Container = styled.div`\n//   display: flex;\n//   flex-direction: row;\n//   justify-content: center;\n\n//   margin-top: 50px;\n// `;\nimport styled from 'styled-components';\n\nexport const Repository = styled.div`\n  width: 90%;\n  background: #fff;\n  border-radius: 3px;\n  /* display: flex; */\n  flex-direction: column;\n  margin: 5px;\n\n  header {\n    padding: 0 20px 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: left;\n    justify-content: center;\n    flex: 1;\n\n    strong {\n      font-size: 26px;\n      color: #000;\n      max-width: 750px;\n    }\n    small {\n      font-size: 19px;\n      color: #666;\n      max-width: 750px;\n    }\n  }\n  img {\n    width: 64px;\n    height: 64px;\n    margin: 15px 15px;\n  }\n`;\n\nexport const Loading = styled.span`\n  color: #ffe160;\n  font-size: 20px;\n  padding-top: 20px;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n  background: #ffe160;\n  border-radius: 3px;\n  min-width: 120px;\n  margin: 5px 0;\n  font-size: 24px;\n`;\n\nexport const Item = styled.ul`\n  margin: 25px;\n  padding: 25px;\n`;\n\nexport const Results = styled.div`\n  height: 100%;\n`;\n","import React, { Component, Fragment } from 'react';\n\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport {\n  Item, Repository, Button, Card, Loading,\n} from './styles';\n\nimport * as CommitsActions from '../../store/actions/commits';\n\nclass List extends Component {\n  state = { toCommits: false, full_name: '' };\n\n  openCommits = (rep) => {\n    const { loadCommitsRequest } = this.props;\n\n    loadCommitsRequest(rep.full_name);\n  };\n\n  render() {\n    const { repo } = this.props;\n    // const { full_name } = this.state;\n\n    // if (this.state.toCommits === true) {\n    //   return <Redirect to={`/repos/${full_name}/commits/`} />;\n    // }\n    return (\n      <Fragment>\n        {repo.loading && <Loading> Carregando...</Loading>}\n        <Item>\n          {repo.data.map(rep => (\n            <Card key={rep.id} data-testid=\"repo-list\">\n              <Repository>\n                <img src={rep.owner.avatar_url} alt=\"avatar\" />\n                <header>\n                  <strong>{rep.login}</strong>\n                  <strong>{rep.name}</strong>\n                  <small>{rep.description}</small>\n                </header>\n              </Repository>\n              <Button onClick={() => this.openCommits(rep)}>Commits</Button>\n            </Card>\n          ))}\n        </Item>\n      </Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(CommitsActions, dispatch);\n\nconst mapStateToProps = state => ({\n  repo: state.repo,\n  commits: state.commits,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(List);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport logo from '../../assets/logo.png';\nimport {\n  Container, Form, Logo, Results,\n} from './styles';\nimport List from '../../components/List';\n\nimport * as RepoActions from '../../store/actions/repo';\n\nclass Main extends Component {\n  state = {\n    repositoryInput: '',\n  };\n\n  handleAddRepository = (e) => {\n    e.preventDefault();\n    const { addRepoRequest, repo } = this.props;\n\n    addRepoRequest(this.state.repositoryInput);\n  };\n\n  render() {\n    const { repositoryInput } = this.state;\n    const { repo } = this.props;\n    return (\n      <Container>\n        <Logo src={logo} alt=\"Github Guru\" />\n        <div>\n          <h1>{repo.data.id}</h1>\n          <Form onSubmit={this.handleAddRepository}>\n            <input\n              type=\"text\"\n              placeholder=\"Type your Git username...\"\n              value={this.state.repositoryInput}\n              onChange={e => this.setState({ repositoryInput: e.target.value })}\n            />\n            <button type=\"submit\">Check</button>\n          </Form>\n        </div>\n        <List repositoryInput={repositoryInput} />\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(RepoActions, dispatch);\n\nconst mapStateToProps = state => ({\n  repo: state.repo,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Main);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  align-items: center;\n  padding-top: 60px;\n  height: 100%;\n  min-height: 1020px;\n\n  /* background: #fff; */\n`;\nexport const Ul = styled.ul`\n  flex: 1;\n  height: 55px;\n  padding: 0 20px;\n  background: #fff;\n  border: 0;\n  color: #48285b;\n  font-size: 18px;\n  border-radius: 3px;\n`;\nexport const Title = styled.h1`\n  color: #fff;\n  font-size: 22px;\n  margin-top: 15px;\n`;\nexport const SearchBox = styled.div`\n  background: #fbfbfb;\n  border: 1px solid #eaeaea;\n  border-radius: 3px;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  height: 55px;\n  background-color: #f2f2f2;\n\n  margin-top: 20px;\n  width: 100%;\n  max-width: 400px;\n`;\nexport const SearchInput = styled.input`\n  /* flex: 1;\n  padding: 0 20px; */\n  background: #fff;\n\n  /* color: #48285b; */\n  font-size: 18px;\n  border-radius: 3px;\n`;\nexport const List = styled.li`\n  color: #fff;\n`;\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 100%;\n`;\nexport const Logo = styled.img`\n  height: 250px;\n  /* margin-bottom: 15px; */\n`;\nexport const Results = styled.div`\n  height: 100%;\n`;\n\nexport const CommitList = styled.form`\n  /* margin-top: 20px;\n  width: 100%;\n   max-width: 400px; */\n  display: flex;\n  /* flex: 1; */\n  flex-direction: row;\n\n  border-radius: 3px;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  height: 55px;\n\n  margin-top: 20px;\n  width: 100%;\n  max-width: 400px;\n  input {\n    flex: 1;\n    height: 55px;\n    padding: 0 20px;\n    background: #fff;\n    border: 0;\n    color: #48285b;\n    font-size: 18px;\n    border-radius: 3px;\n  }\n\n  button {\n    height: 55px;\n    padding: 0 20px;\n    margin-left: 10px;\n    background: #ffe162;\n    color: #48285b;\n    border: 0;\n    font-size: 20px;\n    font-weight: bold;\n    border-radius: 3px;\n\n    &:hover {\n      background: #fff111;\n    }\n  }\n`;\n\nexport const Repository = styled.div`\n  max-width: 750px;\n  background: #fff;\n  border-radius: 3px;\n  display: flex;\n  flex-direction: column;\n  margin: 15px;\n  flex: 1;\n\n  /* padding: 10px; */\n  h1 {\n    font-size: 28px;\n  }\n\n  div {\n    flex-direction: row;\n    display: flex;\n\n    h2 {\n      padding: 40px;\n      font-size: 44px;\n      justify-content: center;\n      align-items: center;\n    }\n\n    img {\n      width: 100px;\n      height: 100px;\n      min-width: 125px;\n      min-width: 125px;\n      border-radius: 100%;\n      margin: 25px;\n    }\n  }\n\n  header {\n    padding: 13px;\n    font-size: 24px;\n    color: #c33;\n  }\n  strong {\n    font-size: 22px;\n    padding: 13px;\n    color: #c44;\n  }\n  small {\n    font-size: 19px;\n    padding: 13px;\n    color: #c66;\n  }\n  h2 {\n    margin: 0 25px 15px;\n  }\n`;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport moment from 'moment-timezone';\nimport {\n  Container,\n  List,\n  Ul,\n  Card,\n  Logo,\n  CommitList,\n  SearchInput,\n  SearchBox,\n  Title,\n  Button,\n  Repository,\n} from './styles';\nimport logo from '../../assets/logo.png';\nimport avatar from '../../assets/avatar.png';\nimport * as CommitsActions from '../../store/actions/commits';\n\nclass Commits extends Component {\n  state = {\n    items: [],\n    search: '',\n  };\n\n  filterList = (event) => {\n    const { commits } = this.props;\n    let updatedList = this.state.items;\n    updatedList = commits.data.filter(\n      c => c.commit.message.toLowerCase().search(event.target.value.toLowerCase()) !== -1,\n    );\n    this.setState({ items: updatedList, search: event.target.value });\n  };\n\n  componentDidMount = () => {\n    const { commits } = this.props;\n    this.setState({ items: commits.data });\n  };\n\n  componentWillMount() {\n    const { commits } = this.props;\n    const list = commits.data.filter(c => c.commit.message === '');\n    this.setState({ items: list });\n  }\n\n  render() {\n    const { items, search } = this.state;\n    console.log(items);\n    return (\n      <Container>\n        <Logo src={logo} alt=\"Github Guru\" />\n        <CommitList>\n          <SearchInput\n            type=\"text\"\n            className=\"form-control form-control-lg\"\n            placeholder=\"Filter by commit message...\"\n            onChange={this.filterList}\n          />\n          <button type=\"submit\">Filter</button>\n        </CommitList>\n        {search === '' ? (\n          <Title>Last 20 commits:</Title>\n        ) : (\n          <Title>All commits with '{search}' will appear below:</Title>\n        )}\n        {items.slice(0, 20).map(item => (\n          <Card key={item.sha}>\n            <Repository>\n              <div>\n                {item.author === null ? (\n                  <img src={avatar} alt=\"avatar\" alt=\"avatar\" />\n                ) : (\n                  <img src={item.author.avatar_url} />\n                )}\n                <h2>{item.commit.author.name}</h2>\n              </div>\n              <h2>\n                Commit message:\n                <strong>{item.commit.message}</strong>\n              </h2>\n\n              <h2>\n                Last Commit:\n                <small>{moment(item.commit.author.date).fromNow()}</small>\n              </h2>\n            </Repository>\n          </Card>\n        ))}\n      </Container>\n    );\n  }\n}\n\n// const mapDispatchToProps = dispatch => bindActionCreators(CommitsActions, dispatch);\n\nconst mapStateToProps = state => ({\n  repo: state.repo,\n  commits: state.commits,\n});\n\nexport default connect(\n  mapStateToProps,\n  // mapDispatchToProps,\n)(Commits);\n","import React from 'react';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Main from './pages/Main';\nimport Commits from './components/Commits';\n// import List from './components/List';\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Main} />\n    <Route path=\"/commits\" component={Commits} />\n  </Switch>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n* {\n  margin:0;\n  padding:0;\n  outline:0;\n  box-sizing: border-box;\n\n}\nhtml, body, #root {\n  min-height: 100%;\n  min-width: 375px;\n}\nbody{\n  background:#48285b;\n  /* text-rendering: optimizeLegibility !important; */\n  -webkit-font-smoothing: antialiased !important;\n  font-family: sans-serif;\n  }\n`;\n","// import styled from 'styled-components';\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\n// import Container from './styles/global';\nimport store from './store';\nimport history from './services/history';\nimport Routes from './routes';\nimport './config/ReactotronConfig';\nimport GlobalStyle from './styles/global';\n\nconsole.tron.log('testando');\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Provider store={store}>\n          <Routes />\n          <GlobalStyle />\n        </Provider>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './config/ReactotronConfig';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","module.exports = __webpack_public_path__ + \"static/media/logo.8407d2c3.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar.c6460685.png\";"],"sourceRoot":""}